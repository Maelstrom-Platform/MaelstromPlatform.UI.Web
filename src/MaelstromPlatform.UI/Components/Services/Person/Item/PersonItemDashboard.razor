@inject HttpClient Http

<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Wrap="FlexWrap.NoWrap">
    @if (IsLoading)
    {
        <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    }
    else
    {
        <RadzenText TextStyle="TextStyle.DisplayH4">Person @Identifier Dashboard</RadzenText>
    }
</RadzenStack>

@code {
    [Parameter] public Guid sysid { get; set; }

    private bool IsLoading { get; set; } = true;

    private PersonModel PersonData = new();
    private string Identifier { get; set; }

    private async Task<PersonModel> GetItemDetails()
    {
        var result = await Http.GetFromJsonAsync<PersonModel>($"/api/people/{sysid}") ?? new PersonModel();
        return result;
    }

    protected override async Task OnParametersSetAsync()
    {
        PersonData = await GetItemDetails();
        Identifier = PersonData.Identifier;
        await base.OnParametersSetAsync();
        IsLoading = false;
    }
}